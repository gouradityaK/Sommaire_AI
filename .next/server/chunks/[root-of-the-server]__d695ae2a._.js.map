{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 84, "column": 0}, "map": {"version":3,"sources":["file:///E:/Project%20That%20I%20Can%20Done%20nd%20Git%20Upl/summarized-app/app/api/uploadthing/core.ts"],"sourcesContent":["import { currentUser } from \"@clerk/nextjs/server\";\r\nimport { UploadThingError } from \"uploadthing/server\";\r\nimport { createUploadthing, type FileRouter } from \"uploadthing/next\";\r\nconst f = createUploadthing();\r\n\r\nexport const ourFileRouter = {\r\n    pdfUploader: f({ pdf: {maxFileSize: '32MB' } })\r\n    .middleware(\r\n        async ( { req } ) => {\r\n            //get user information is here\r\n            const user = await currentUser();\r\n        if(!user) throw new UploadThingError\r\n        ('Unauthorized');   \r\n\r\n        return { userId: user.id };\r\n    }\r\n).onUploadComplete(async ( {metadata, file } ) =>{\r\n    console.log('upload completed for user id', metadata.userId);\r\n    console.log('file url', file.url);\r\n    \r\n    \r\n    return { userId: metadata.userId , file:file.url };\r\n    \r\n}),\r\n} satisfies FileRouter;\r\n\r\nexport type OurFileRouter = typeof ourFileRouter;  "],"names":[],"mappings":";;;AAAA;AACA;AACA;;;;AACA,MAAM,IAAI,CAAA,GAAA,8JAAA,CAAA,oBAAiB,AAAD;AAEnB,MAAM,gBAAgB;IACzB,aAAa,EAAE;QAAE,KAAK;YAAC,aAAa;QAAO;IAAE,GAC5C,UAAU,CACP,OAAQ,EAAE,GAAG,EAAE;QACX,8BAA8B;QAC9B,MAAM,OAAO,MAAM,CAAA,GAAA,4LAAA,CAAA,cAAW,AAAD;QACjC,IAAG,CAAC,MAAM,MAAM,IAAI,0JAAA,CAAA,mBAAgB,CACnC;QAED,OAAO;YAAE,QAAQ,KAAK,EAAE;QAAC;IAC7B,GACF,gBAAgB,CAAC,OAAQ,EAAC,QAAQ,EAAE,IAAI,EAAE;QACxC,QAAQ,GAAG,CAAC,gCAAgC,SAAS,MAAM;QAC3D,QAAQ,GAAG,CAAC,YAAY,KAAK,GAAG;QAGhC,OAAO;YAAE,QAAQ,SAAS,MAAM;YAAG,MAAK,KAAK,GAAG;QAAC;IAErD;AACA","debugId":null}},
    {"offset": {"line": 121, "column": 0}, "map": {"version":3,"sources":["file:///E:/Project%20That%20I%20Can%20Done%20nd%20Git%20Upl/summarized-app/app/api/uploadthing/route.ts"],"sourcesContent":["import { createRouteHandler } from \"uploadthing/next\";\r\n\r\nimport { ourFileRouter } from \"@/app/api//uploadthing/core\"; \r\n\r\nexport const {GET, POST} = createRouteHandler({\r\n    router: ourFileRouter,\r\n    // config \r\n});"],"names":[],"mappings":";;;;AAAA;AAEA;;;AAEO,MAAM,EAAC,GAAG,EAAE,IAAI,EAAC,GAAG,CAAA,GAAA,8JAAA,CAAA,qBAAkB,AAAD,EAAE;IAC1C,QAAQ,mIAAA,CAAA,gBAAa;AAEzB","debugId":null}}]
}