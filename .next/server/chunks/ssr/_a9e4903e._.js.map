{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 19, "column": 0}, "map": {"version":3,"sources":["file:///E:/Project%20That%20I%20Can%20Done%20nd%20Git%20Upl/summarized-app/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,2JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,qIAAA,CAAA,OAAI,AAAD,EAAE;AACtB","debugId":null}},
    {"offset": {"line": 35, "column": 0}, "map": {"version":3,"sources":["file:///E:/Project%20That%20I%20Can%20Done%20nd%20Git%20Upl/summarized-app/components/common/bg-gradient.tsx"],"sourcesContent":["import { cn } from \"@/lib/utils\";\r\n\r\nexport default function BgGradient({\r\n    className,\r\n}: {\r\n    \r\n    className?: string;\r\n}) {\r\n    return (\r\n            <div\r\n                aria-hidden=\"true\"\r\n                className=\"pointer-events-none absolute inset-x-0 -top-40\r\n            -z-10 transform-gpu overflow-hidden blur-3xl sm:-top-30\"\r\n            >\r\n                <div style={{\r\n                    clipPath:\r\n                        'polygon(50% 0%, 61% 35%, 98% 35%, 68% 57%, 79% 91%, 50% 70%, 21% 91%, 32% 57%, 2% 35%, 39% 35%)'\r\n                }}\r\n                    className={cn(\"relative left-[calc(50%-11rem)] aspect-1155/678 w-[36,125rem] -translate-x-1/2 rotate-[30deg] bg-linear-to-r from-emerald-500 via-teal-500 to-cyan-500 opacity-20 sm:left-[calc(50%-30rem)] sm:w-[72rem]\",className)}\r\n\r\n                />\r\n            </div>\r\n        \r\n\r\n\r\n    );\r\n}"],"names":[],"mappings":";;;;AAAA;;;AAEe,SAAS,WAAW,EAC/B,SAAS,EAIZ;IACG,qBACQ,8OAAC;QACG,eAAY;QACZ,WAAU;kBAGV,cAAA,8OAAC;YAAI,OAAO;gBACR,UACI;YACR;YACI,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,4MAA2M;;;;;;;;;;;AAQ7O","debugId":null}},
    {"offset": {"line": 68, "column": 0}, "map": {"version":3,"sources":["file:///E:/Project%20That%20I%20Can%20Done%20nd%20Git%20Upl/summarized-app/components/ui/badge.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center justify-center rounded-md border px-2 py-0.5 text-xs font-medium w-fit whitespace-nowrap shrink-0 [&>svg]:size-3 gap-1 [&>svg]:pointer-events-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive transition-[color,box-shadow] overflow-hidden\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground [a&]:hover:bg-primary/90\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground [a&]:hover:bg-secondary/90\",\n        destructive:\n          \"border-transparent bg-destructive text-white [a&]:hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60\",\n        outline:\n          \"text-foreground [a&]:hover:bg-accent [a&]:hover:text-accent-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nfunction Badge({\n  className,\n  variant,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"span\"> &\n  VariantProps<typeof badgeVariants> & { asChild?: boolean }) {\n  const Comp = asChild ? Slot : \"span\"\n\n  return (\n    <Comp\n      data-slot=\"badge\"\n      className={cn(badgeVariants({ variant }), className)}\n      {...props}\n    />\n  )\n}\n\nexport { Badge, badgeVariants }\n"],"names":[],"mappings":";;;;;AACA;AACA;AAEA;;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB,kZACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SACE;QACJ;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAGF,SAAS,MAAM,EACb,SAAS,EACT,OAAO,EACP,UAAU,KAAK,EACf,GAAG,OAEuD;IAC1D,MAAM,OAAO,UAAU,gKAAA,CAAA,OAAI,GAAG;IAE9B,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QACzC,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 114, "column": 0}, "map": {"version":3,"sources":["file:///E:/Project%20That%20I%20Can%20Done%20nd%20Git%20Upl/summarized-app/components/upload/upload-header.tsx"],"sourcesContent":["import { Sparkles } from \"lucide-react\";\r\nimport { Badge } from \"../ui/badge\";\r\n\r\nexport default function UploadHeader(){\r\n    return  <div className=\"flex flex-col items-center justify-center gap-6 text-center\">\r\n                    <div className=\"relative p-[1px] overflow-hidden rounded-full bg-gradient-to-r from-rose-200 via-rose-500 to-rose-800 animate-gradient-x group\">\r\n                        <Badge\r\n                            variant={'secondary'}\r\n                            className=\"relative px-6 py-2 text-base font-medium bg-white rounded-full group-hover:bg-gray-100 transition-colors\"\r\n                        >\r\n                            <Sparkles className=\"h-6 w-6 mr-2 text-red-600 animate-pulse\" />\r\n                            <p>AI Powered Content Creation</p>\r\n                        </Badge>\r\n                    </div>\r\n                    <div className=\"capitalized text-3xl font-bold tracking-tight text-gray-900 sm:text-4xl\">\r\n                        Start Uploading {' '}\r\n                        <span className=\"relative inline-block\">\r\n                            <span className=\"relative z-10 px-2\">Your PDF's</span>\r\n                            <span className=\"absolute inset-0 bg-rose-200/50 -rotate-2 rounded-lg transform -skew-y-1\" aria-hidden=\"true\"></span>\r\n                        </span>{' '}\r\n                    </div>\r\n                    <div className=\"mt-2 text-lg leading-8 text-gray-600 max-w-2xl text-center\">\r\n                        <p>Upload your PDF and let our AI do the magic! ✨</p>\r\n                    </div>\r\n                </div>\r\n}"],"names":[],"mappings":";;;;AAAA;AACA;;;;AAEe,SAAS;IACpB,qBAAQ,8OAAC;QAAI,WAAU;;0BACP,8OAAC;gBAAI,WAAU;0BACX,cAAA,8OAAC,0HAAA,CAAA,QAAK;oBACF,SAAS;oBACT,WAAU;;sCAEV,8OAAC,0MAAA,CAAA,WAAQ;4BAAC,WAAU;;;;;;sCACpB,8OAAC;sCAAE;;;;;;;;;;;;;;;;;0BAGX,8OAAC;gBAAI,WAAU;;oBAA0E;oBACpE;kCACjB,8OAAC;wBAAK,WAAU;;0CACZ,8OAAC;gCAAK,WAAU;0CAAqB;;;;;;0CACrC,8OAAC;gCAAK,WAAU;gCAA2E,eAAY;;;;;;;;;;;;oBACnG;;;;;;;0BAEZ,8OAAC;gBAAI,WAAU;0BACX,cAAA,8OAAC;8BAAE;;;;;;;;;;;;;;;;;AAG3B","debugId":null}},
    {"offset": {"line": 221, "column": 0}, "map": {"version":3,"sources":["file:///E:/Project%20That%20I%20Can%20Done%20nd%20Git%20Upl/summarized-app/components/upload/upload-form.tsx"],"sourcesContent":["// 'use client'\r\n// import UploadFormInput from \"@/components/upload/upload-form-input\";\r\n// import { useUploadThing } from \"@/utils/uploadthing\";\r\n// import { useSonner } from \"sonner\"\r\n\r\n\r\n// import { z } from 'zod'\r\n\r\n\r\n// const schema = z.object({\r\n//     file: z.instanceof(File, { message: 'Invalid FIle' }).refine((file) => file.size <= 15 * 1024 * 1024,\r\n//     )\r\n//         .refine((file) => file.type.startsWith('application/pdf'),\r\n//             { message: 'File must be a PDF' }\r\n//         ),\r\n// });\r\n// export default function UploadForm() {\r\n\r\n\r\n//     const { startUpload } = useUploadThing\r\n//         ('pdfUploader', {\r\n//             onClientUploadComplete: () => {\r\n//                 console.log(\"uploaded successfully!\");\r\n//             },\r\n//             onUploadError: (error) => {\r\n//                 console.error(\"error occurred while uploading\", error);\r\n//             },\r\n//             onUploadBegin: ({ file }) => {\r\n//                 console.log(\"upload has begun for\", file);\r\n//             },\r\n//         });\r\n\r\n//     const handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\r\n//         e.preventDefault();\r\n//         console.log(\"Form submitted\");\r\n//         const formData = new FormData(e.currentTarget);\r\n//         const file = formData.get(\"file\") as File;\r\n\r\n//         // validating the fields that the form have/\r\n//         const validatedFields = schema.safeParse({ file });\r\n\r\n//         console.log(validatedFields);\r\n\r\n//         if (!validatedFields.success) {\r\n//             console.log(\r\n//                 validatedFields.error.flatten().fieldErrors.file?.\r\n//                 [0] ?? 'Invalid file'\r\n//             );\r\n//             return;\r\n//         }\r\n//         // schema validation with zod \r\n//         // upload the file to Upload Things \r\n//         const resp = await startUpload([file]);\r\n//         if (!resp) {\r\n//             return;\r\n//         }\r\n//         //parse the pdf int lang chain\r\n//         // Summarized the pdf into the valuable insides\r\n//         // save the summary to the database\r\n//         // and after this redirect to the summary page as well as the summary\r\n\r\n\r\n//     };\r\n//     return (\r\n//         <div className=\"flex flex-col gap-8 w-full max-w-2xl mx-auto\">\r\n//             <UploadFormInput onSubmit={handleSubmit} />\r\n//         </div>\r\n//     );\r\n// }\r\n\r\n// 'use client'\r\n\r\n// import UploadFormInput from \"@/components/upload/upload-form-input\"\r\n// import { useUploadThing } from \"@/utils/uploadthing\"\r\n// import { toast } from \"sonner\" // ✅ Import toast here\r\n// import { z } from \"zod\"\r\n\r\n// const schema = z.object({\r\n//     file: z\r\n//         .instanceof(File, { message: \"Invalid File\" })\r\n//         .refine((file) => file.size <= 15 * 1024 * 1024, {\r\n//             message: \"File size must be under 15MB\",\r\n//         })\r\n//         .refine((file) => file.type.startsWith(\"application/pdf\"), {\r\n//             message: \"File must be a PDF\",\r\n//         }),\r\n// })\r\n\r\n// export default function UploadForm() {\r\n//     const { startUpload } = useUploadThing(\"pdfUploader\", {\r\n//         onClientUploadComplete: () => {\r\n//             // console.log(\"uploaded successfully!\")\r\n//             toast.success(\"Uploaded successfully!\")\r\n//         },\r\n//         onUploadError: (error) => {\r\n//             // console.error(\"error occurred while uploading\", error)\r\n//             toast.error(\"Upload failed\", {\r\n//                 description: error.message,\r\n//             })\r\n//         },\r\n//         onUploadBegin: ({ file }) => {\r\n//             console.log(\"upload has begun for\", file)\r\n//             toast(\"Uploading...\", {\r\n//                 description: file.name,\r\n//             })\r\n//         },\r\n//     })\r\n\r\n//     const handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\r\n//         e.preventDefault()\r\n//         console.log(\"Form submitted\")\r\n\r\n//         const formData = new FormData(e.currentTarget)\r\n//         const file = formData.get(\"file\") as File\r\n\r\n//         const validatedFields = schema.safeParse({ file })\r\n\r\n//         if (!validatedFields.success) {\r\n//             const message =\r\n//                 validatedFields.error.flatten().fieldErrors.file?.[0] ?? \"Invalid file\"\r\n//             toast.error(\"Validation Error\", {\r\n//                 description: message,\r\n//                 className: \"bg-red-100 text-red-800 border border-red-400\", // like \"destructive\"\r\n//                 icon: \"❌\",\r\n//             })\r\n//             //     toast(\"Validation Error\", {\r\n//             //   description: message,\r\n//             //   className: \"bg-red-100 text-red-800 border border-red-400\", // like \"destructive\"\r\n//             //   icon: \"❌\",\r\n//             // })\r\n//             return\r\n//         }\r\n//         toast('Uploading.......',\r\n//             {\r\n//                 description: 'We are uploading your pdf!',\r\n//             }\r\n//         )\r\n//         const resp = await startUpload([file])\r\n\r\n//         if (!resp) {\r\n//             toast(\"Something went wrong during upload\",{\r\n//                 description:'please used another file',\r\n//                 className: \"bg-red-100 text-red-800 border border-red-400\"\r\n//             })\r\n//             return;\r\n//         }\r\n//         toast('Processing the PDF',\r\n//             {\r\n//                 description: 'Hang tight!  Our AI is reading through your document .',\r\n//             }\r\n//         )\r\n\r\n//         // Further steps after successful upload (e.g., call backend or redirect)\r\n//     }\r\n\r\n//     return (\r\n//         <div className=\"flex flex-col gap-8 w-full max-w-2xl mx-auto\">\r\n//             <UploadFormInput onSubmit={handleSubmit} />\r\n//         </div>\r\n//     )\r\n// }\r\n\r\n\r\n// 'use client'\r\n// import UploadFormInput from \"@/components/upload/upload-form-input\"\r\n// import { useUploadThing } from \"@/utils/uploadthing\"\r\n// import { toast } from \"sonner\"\r\n// import { z } from \"zod\"\r\n\r\n// const schema = z.object({\r\n//     file: z\r\n//         .instanceof(File, { message: \"Invalid File\" })\r\n//         .refine((file) => file.size <= 15 * 1024 * 1024, {\r\n//             message: \"File size must be under 15MB\",\r\n//         })\r\n//         .refine((file) => file.type.startsWith(\"application/pdf\"), {\r\n//             message: \"File must be a PDF\",\r\n//         }),\r\n// })\r\n\r\n// export default function UploadForm() {\r\n//     const { startUpload } = useUploadThing(\"pdfUploader\", {\r\n//         onClientUploadComplete: (res) => {\r\n//             toast.success(\"Upload complete!\", {\r\n//                 description: \"Your PDF is being processed.\",\r\n//             })\r\n//             console.log(\"Uploaded files:\", res) // Debug uploaded files\r\n//         },\r\n//         onUploadError: (error) => {\r\n//             toast.error(\"Upload failed\", {\r\n//                 description: error.message || \"Please try again.\",\r\n//             })\r\n//             console.error(\"UploadThing error:\", error) // Log full error\r\n//         },\r\n//     })\r\n\r\n//     const handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\r\n//         e.preventDefault()\r\n//         const formData = new FormData(e.currentTarget)\r\n//         const file = formData.get(\"file\") as File\r\n\r\n//         // Debug: Log file details\r\n//         console.log(\"Selected file:\", {\r\n//             name: file.name,\r\n//             type: file.type,\r\n//             size: file.size,\r\n//         })\r\n\r\n//         // Validate file\r\n//         const validatedFields = schema.safeParse({ file })\r\n//         if (!validatedFields.success) {\r\n//             const errorMessage = validatedFields.error.flatten().fieldErrors.file?.[0] ?? \"Invalid file\"\r\n//             toast.error(\"Validation error\", {\r\n//                 description: errorMessage,\r\n//             })\r\n//             return\r\n//         }\r\n\r\n//         // Start upload\r\n//         const uploadToast = toast.loading(\"Uploading your PDF...\")\r\n//         try {\r\n//             const resp = await startUpload([file])\r\n//             if (!resp) {\r\n//                 toast.error(\"Upload failed\", {\r\n//                     description: \"No response received.\",\r\n//                     id: uploadToast,\r\n//                 })\r\n//                 return\r\n//             }\r\n//             toast.success(\"Processing started!\", {\r\n//                 description: \"AI is analyzing your document...\",\r\n//                 id: uploadToast,\r\n//             })\r\n//         } catch (err) {\r\n//             toast.error(\"Unexpected error\", {\r\n//                 description: \"Please try again later.\",\r\n//                 id: uploadToast,\r\n//             })\r\n//             console.error(\"Submission error:\", err)\r\n//         }\r\n//     }\r\n\r\n//     return (\r\n//         <div className=\"flex flex-col gap-8 w-full max-w-2xl mx-auto\">\r\n//             <UploadFormInput onSubmit={handleSubmit} />\r\n//         </div>\r\n//     )\r\n// }"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 443, "column": 0}, "map": {"version":3,"sources":["file:///E:/Project%20That%20I%20Can%20Done%20nd%20Git%20Upl/summarized-app/app/%28logged-in%29/upload/page.tsx"],"sourcesContent":["import BgGradient from \"@/components/common/bg-gradient\"\r\nimport UploadHeader from \"@/components/upload/upload-header\"\r\nimport UploadForm from \"@/components/upload/upload-form\"\r\nexport default function Page() {\r\n    return <section className=\"min-h-screen\">\r\n        <BgGradient />\r\n        <div className=\"mx-auto  max-w-7xl px-6 py-24 sm:py-32 lg:px-8\">\r\n           <div className=\"flex flex-col items-center justify-center gap-6 text-center\">\r\n           <UploadHeader />\r\n           <UploadForm />\r\n           </div>\r\n        </div>\r\n    </section>\r\n}"],"names":[],"mappings":";;;;AAAA;AACA;AACA;;;;;AACe,SAAS;IACpB,qBAAO,8OAAC;QAAQ,WAAU;;0BACtB,8OAAC,uIAAA,CAAA,UAAU;;;;;0BACX,8OAAC;gBAAI,WAAU;0BACZ,cAAA,8OAAC;oBAAI,WAAU;;sCACf,8OAAC,yIAAA,CAAA,UAAY;;;;;sCACb,8OAAC,uIAAA,CAAA,UAAU;;;;;;;;;;;;;;;;;;;;;;AAItB","debugId":null}}]
}